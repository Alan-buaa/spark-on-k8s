# Default values for spark-k8s-zeppelin-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: shirishd
  tag: zeppelin:0.7.3-spark-v2.2.0-kubernetes-0.5.0
  pullPolicy: IfNotPresent

zeppelinService:
  type: LoadBalancer
  port: 8080

sparkWebUI:
  type: LoadBalancer
  port: 4040

serviceAccount: default

# Any environment variables that need to be made available to the container are defined here
# This may include environment variables used by Spark, Zeppelin
environment:
  # Provide configuration parameters, use syntax as expected by spark-submit
  SPARK_SUBMIT_OPTIONS: >-
     --kubernetes-namespace default
     --conf spark.kubernetes.driver.docker.image=shirishd/spark-driver:v2.2.0-kubernetes-0.5.0
     --conf spark.kubernetes.executor.docker.image=shirishd/spark-executor:v2.2.0-kubernetes-0.5.0
     --conf spark.executor.instances=2
#     --conf spark.hadoop.google.cloud.auth.service.account.json.keyfile=/etc/secrets/sparkonk8s-test.json

sparkEventLog:
  enableHistoryEvents: false
  # eventsLogDir should point to a URI of GCS bucket where history events will be dumped
  eventLogDir: "gs://spark_history_server_testing/"

# if mountSecrets is set to true files in 'secrets' directory will be mounted
# on path '/etc/secrets' as secrets
mountSecrets: false

noteBookStorage:
  usePVForNoteBooks: true
  # If using PV for notebook storage, 'notebookDir' will be an
  # absolute path in the mounted persistent volume
  notebookDir: "/notebooks"

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  ## If 'existingClaim' is defined, PVC must be created manually before
  ## volume will be bound
  # existingClaim:

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, Azure & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 8Gi

resources: {}
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}